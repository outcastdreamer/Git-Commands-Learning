-------------------------------------------------

Note :
-> "#" refers as comment (don't include it in the cmd command)			
-> keyword refers to origin or whatever you have used for storing remote git link of your repo

------------------------------------------------
			
			GLOBAL CONFIG LEVEL (One time setup)

1. git config --global user.name "username"
2. git config --global user.email "email@email.com"
-------------------------------------------------

			PROJECT LEVEL  (Everytime a new project is made)

3. open cmd in the current folder (ctrl+L or click on link/address bar)
4. git init
5. git remote add keyword <link>

Note : Make sure that a new github repository has been made as well for this process.
-------------------------------------------------

			UPDATION LEVEL (Every time you make changes to your code)

6 a.) git add .                          #add all files in the current working directory
	or
   b.) git add <filename>         #only add a specific file (not all files)
7. git status
8. git commit -m "message"        #Message can be different such as "removed bugs", etc
9. git push -u keyword master     

			EG : git push -u origin master
			
-------------------------------------------------

			ADDITIONAL
			
10. git remote -v
11. git rm <filename>

-------------------------------------------------

			For Forking other user's project
			
12. Click on "fork" from their repo.			
13. git clone <link>             #Of your cloned repo on your personal account
14. Make your changes to the files and send pull request

#The pull request will be added by the Repo/Main Project owner if they find
#find it beneficial to their project (removed bugs or added feature)

-------------------------------------------------

			Merging/Syncing with main project you forked (One time set up)

15. Add the remote, call it "upstream":

16. git remote add upstream https://github.com/whoever/whatever.git

-------------------------------------------------

			Merging with main forked project locally (After One time set up is done (16 & 17 step))

# Fetch all the branches of that remote into remote-tracking branches,
# such as upstream/master:

17. git pull upstream master    

# Make sure that you're on your master branch:

18. git checkout master

# Rewrite your master branch so that any commits of yours that
# aren't already in upstream/master are replayed on top of that
# other branch:

19. git rebase upstream/master   #To resolve any conflicts or clashes

-------------------------------------------------

			Pushing the main forked project to your personal forked project 
			
20. git push -f keyword master   #-f stands for force, in case git push keyword master doesn't work

			
----------------------X--------------X--------------------------------------


  